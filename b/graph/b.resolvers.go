package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"context"
	"main/graph/model"
	"main/helper"
)

// Posts is the resolver for the posts field.
func (r *queryResolver) Posts(ctx context.Context) ([]model.PostInterface1, error) {
	return []model.PostInterface1{
		&model.CompactPost{ID: "1", Awards: []*model.Award{
			{ID: "1", Name: helper.AsRef("One")},
			{ID: "2", Name: helper.AsRef("Two")},
			{ID: "3", Name: helper.AsRef("Three")},
		}},
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
